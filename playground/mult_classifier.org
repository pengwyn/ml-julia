#+OPTIONS: toc:nil

A multinomial classifier

* Setup
  
#+BEGIN_SRC jupyter-julia :results silent 
using Revise
using Plots
pyplot()

push!(LOAD_PATH, "../src")
using Data
using LogMult
#+END_SRC

* A dumb classifier
** Generic tester

#+BEGIN_SRC jupyter-julia :results silent
  function TestData(data)
      cont = DataContainer(data...)

      class = LogisticClassifierMultinomial(max_iter=10000)
      initialiseWeights!(class, cont)

      # plot(class, cont)
      X,y = extractArrays(cont)
      plot(class, X, y)
  end
#+END_SRC

** Blob

   #+BEGIN_SRC jupyter-julia
     data = makeCloud(5)
     cont = DataContainer(data...)

     class = LogisticClassifierMultinomial()
     initialiseWeights!(class, cont)

     X,y = extractArrays(cont)
     y_pred = forwardPass(class, X)

     @show y[1,:] y_pred[1,:]
     @show logLoss(y[1,:], y_pred[1,:])

     pred = predict(class,X)
     tru = oneHotDec(y)

     @show pred tru
     
   #+END_SRC

   #+BEGIN_SRC jupyter-julia :file images/logclassifier_cloud.png
   TestData(makeCloud(5))
   #+END_SRC

   #+RESULTS:
   :RESULTS:
: size(X_back) = (40401, 2)
[[file:images/logclassifier_cloud.png]]
   :END:
  
** Spiral
   #+BEGIN_SRC jupyter-julia :file images/logclassifier_sprial.png
 TestData(makeSpiral(3))
   #+END_SRC

   #+RESULTS:
   :RESULTS:
[[file:images/logclassifier_sprial.png]]
   :END:

