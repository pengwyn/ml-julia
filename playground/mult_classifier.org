#+OPTIONS: toc:nil

A multinomial classifier

* Setup
  
#+BEGIN_SRC jupyter-julia :results silent 
using Revise
using Plots
pyplot()

push!(LOAD_PATH, "../src")
using Data
using LogMult
#+END_SRC

* A dumb classifier
** Generic tester

#+BEGIN_SRC jupyter-julia :results silent
  function TestData(data)
      cont = DataContainer(data...)

      class = LogisticClassifierMultinomial(max_iter=10000)
      initialiseWeights!(class, cont)

      # plot(class, cont)
      X,y = extractArrays(cont)
      plot(class, X, y)
  end
#+END_SRC

** Blob

   #+BEGIN_SRC jupyter-julia
     data = makeCloud(5)
     cont = DataContainer(data...)

     class = LogisticClassifierMultinomial()
     initialiseWeights!(class, cont)

     X,y = extractArrays(cont)
     y_pred = forwardPass(class, X)

     @show y[1,:] y_pred[1,:]
     @show logLoss(y[1,:], y_pred[1,:])

     pred = predict(class,X)
     tru = oneHotDec(y)

     @show pred tru
     
   #+END_SRC

   #+RESULTS:
   :RESULTS:
: y[1, :] = Bool[false, false, false, true, false]
: y_pred[1, :] = [0.0938434, 0.0391384, 0.170931, 0.163501, 0.532587]
: logLoss(y[1, :], y_pred[1, :]) = 0.36218725531208124
: pred = [5; 5; 5; 5; 1; 5; 5; 5; 5; 5; 5; 1; 1; 5; 1; 1; 1; 5; 1; 3; 5; 1; 5; 1; 5; 1; 1; 1; 5; 5; 1; 1; 5; 5; 5; 1; 5; 5; 1; 5; 5; 5; 1; 1; 5; 1; 1; 5; 5; 5; 5; 5; 5; 5; 1; 1; 1; 5; 5; 1; 5; 5; 5; 5; 1; 1; 1; 5; 5; 5; 5; 5; 5; 1; 1; 1; 5; 5; 5; 5; 1; 5; 5; 5; 1; 1; 1; 5; 1; 5; 5; 1; 5; 1; 1; 5; 5; 5; 5; 5]
: tru = [4; 4; 4; 2; 1; 2; 3; 2; 2; 2; 3; 1; 1; 1; 5; 5; 5; 4; 1; 1; 4; 5; 3; 1; 2; 1; 5; 1; 4; 2; 1; 5; 3; 3; 4; 5; 2; 3; 5; 2; 3; 2; 5; 5; 4; 1; 5; 3; 3; 2; 4; 4; 3; 2; 1; 5; 5; 3; 3; 5; 2; 4; 2; 3; 5; 1; 1; 4; 2; 2; 4; 4; 4; 1; 5; 5; 3; 4; 4; 3; 1; 2; 2; 4; 1; 5; 5; 3; 1; 3; 3; 1; 2; 1; 5; 3; 4; 2; 4; 3]
#+BEGIN_EXAMPLE
100×1 Array{Int64,2}:
 4
 4
 4
 2
 1
 2
 3
 2
 2
 2
 3
 1
 1
 ⋮
 1
 3
 3
 1
 2
 1
 5
 3
 4
 2
 4
 3
#+END_EXAMPLE
   :END:

   #+BEGIN_SRC jupyter-julia :file images/dumb_mult_cloud.png
   TestData(makeCloud(5))
   #+END_SRC

   #+RESULTS:
   :RESULTS:
: size(X_back) = (40401, 2)
[[file:images/dumb_mult_cloud.png]]
   :END:
  
** Spiral
   #+BEGIN_SRC jupyter-julia :file images/dumb_mult_spiral.png
 TestData(makeSpiral(3, n_samples=1000))
   #+END_SRC

   #+RESULTS:
   :RESULTS:
: size(X_back) = (40401, 2)
[[file:images/dumb_mult_spiral.png]]
   :END:

